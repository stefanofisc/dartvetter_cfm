/home/s.fiscale/anaconda3/envs/torchcfm/lib/python3.10/site-packages/torch/cuda/__init__.py:128: UserWarning: CUDA initialization: The NVIDIA driver on your system is too old (found version 11040). Please update your GPU driver by downloading and installing a new version from the URL: http://www.nvidia.com/Download/index.aspx Alternatively, go to: https://pytorch.org to install a PyTorch version that has been compiled with your version of the CUDA driver. (Triggered internally at ../c10/cuda/CUDAFunctions.cpp:108.)
  return torch._C._cuda_getDeviceCount() > 0
/home/s.fiscale/conda/Models/forest_diffusion/code/feature_extraction/train_test_cnn.py:199: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
eseguo training su cpu
DartVetterFiscale2024(
  (global_view): GlobalViewFiscale(
    (convs): ModuleList(
      (0): Conv1d(1, 16, kernel_size=(3,), stride=(1,), padding=same)
      (1): Conv1d(16, 32, kernel_size=(3,), stride=(1,), padding=same)
      (2): Conv1d(32, 64, kernel_size=(3,), stride=(1,), padding=same)
      (3): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=same)
      (4): Conv1d(128, 256, kernel_size=(3,), stride=(1,), padding=same)
    )
    (dropout): ModuleList(
      (0-4): 5 x Dropout(p=0.3, inplace=False)
    )
    (batch_norms): ModuleList(
      (0): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (fully_connected): FullyConnectedFiscale(
    (fc_layer): Linear(in_features=768, out_features=512, bias=True)
    (dropout): Dropout(p=0.3, inplace=False)
    (output_layer): Linear(in_features=512, out_features=1, bias=True)
  )
)
Model assessment on /home/s.fiscale/conda/Models/forest_diffusion/data/tess_exofop_spoc-qlp_split100.csv

Carico modello /home/s.fiscale/conda/Models/forest_diffusion/trained_models/cnn_kepler_q1-q17_dr24_split90.pt

Test Loss: 0.6454
Precision: 0.8635
Recall: 0.6845
F1 Score: 0.7636
Confusion Matrix:
[[ 254  322]
 [ 939 2037]]
